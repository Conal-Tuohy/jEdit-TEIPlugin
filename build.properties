# Default properties for plugin-build.xml
# Uncomment properties and set to desired values.
# Save to a file named build.properties in one of these locations:
# - The plugin's main directory (e.g., "plugins/XML/build.properties")
# - The plugin's parent directory (e.g., "plugins/build.properties")
# - Your home directory (with or without a leading dot)

#build.support=../build-support
#build.support=../build-support
# jEdit & plugins directory settings

# jEdit install directory
#jedit.install.dir=../../jEdit
jedit.install.dir=/usr/share/jedit
# location where your jars are installed
#install.dir=${jedit.install.dir}/jars

# Location where the plugins are. This property used when defining dependencies on other plugins.
# Eg. In your plugin's classpath.
# <path id="project.class.path">
#   <pathelement location="${jedit.plugins.dir}/ErrorList.jar" />
# </path>
#jedit.plugins.dir=${install.dir}

# Location to find built jars (for dependencies)
#jedit.jars.dir=${install.dir}

# User settings directory
#jedit.user.home=${user.home}/.jedit

# Top-level of the plugins source tree
#plugins.srcdir=..


# Generic plugin build options

# Where the plugin source is located
#src.dir=.

# The name of the JAR file
#jar.file=${ant.project.name}.jar

# The name of the source ZIP file
#src.zip.file=${ant.project.name}.zip

# The target run when running dist
#dist.target=dist.nojavadoc

# Where to put temporary build files
#build.dir=build

# Where to put compiled classes
#build.classes=${build.dir}/classes

# Where to put generated documentation
#build.docs=${build.dir}/docs

# Where to put generated javadoc
#build.javadoc=${build.docs}/javadoc

# Where to put other files
#build.extras=${build.dir}/extras

# Default compiler flags

# Generate debugging code
compiler.debug=true
compiler.debuglevel=lines,vars,source

# Generate optimized code
#compiler.optimize=off

# Deprecation warnings.
#compiler.deprecation=off

# Verbose compiler messages
#compiler.verbose=off

# Disable compiler warnings
#compiler.nowarn=off

# Target JVM version
#compiler.target=1.6
ant.build.javac.target=1.6

# Java version of the source files
#compiler.source=1.6
ant.build.javac.source=1.6

# List files being compiled
#compiler.listfiles=no

# Fork the javac compiler
#compiler.fork=no

# Location for rt.jar and ext dir. By default, these are set to the
# appropriate value for the running jvm.  These are necessary, for example,
# when compiling a Java 1.5 compatible plugin while running Java 1.6.
#compiler.bootclasspath=${java.home}/lib/rt.jar
#compiler.extdirs=${java.ext.dirs}


# Documentation build options

# What target to use for the docs
# can be 'none' if you provide HTML docs that are not generated
#docs-proc.target=xsltproc

# Stylesheet file to use
#user-doc.xsl=${build.support}/users-guide.xsl

# Documentation docbook source
#user-doc.xml=${basedir}/docs/users-guide.xml

# Documentation output file
#user-doc.out=${build.docs}/index.html

# Title for javadoc documentation
javadoc.title=${ant.project.name} API

# If xsltproc is in your path, uncomment this:
#xsltproc.executable=xsltproc

# You can specify the absolute path of the win32 or cygwin binary
# (from the "libxslt" package) of xsltproc here:
#xsltproc.executable=C:/ppApps/xsltproc/xsltproc.exe

### For generating the docs, adjust the following to your local paths
### For xsltproc to work, the path to the DocBook stuff MUST NOT contain spaces!


# cygwin "docbook-xml44" and "docbook-xsl" packages
# can be used to install docbook-xml and docbook-dtd
# (example windows locations):
#docbook.catalog=c:/cygwin/usr/share/xml/docbook/4.4/docbook.cat
#docbook.xsl=c:/cygwin/usr/share/docbook-xsl

# Debian location
#docbook.xsl=/usr/share/xml/docbook/stylesheet/nwalsh
#docbook.catalog=/usr/share/xml/docbook/schema/dtd/4.4/docbook.cat

# Fink (Mac OS/X) location
#docbook.catalog=/sw/share/xml/dtd/docbookx/4.4.0/docbook.cat
#docbook.xsl=/sw/share/xml/xsl/docbook-xsl

# docbook 4.4 dtd can be downloaded from  http://www.docbook.org/xml/4.4/docbook-xml-4.4.zip
# docbook-xsl can be downloaded from http://sourceforge.net/projects/docbook/files/docbook-xsl/

# The name of the xsl stylesheet (without the path info)
#docbook.xsl.sheet=html/chunk.xsl

# The path to the style sheet to use.
#docs.style.sheet=${docbook.xsl}/${docbook.xsl.sheet}

# Windows binaries can be gotten at http://www.zlatkovic.com/libxml.en.html
# You need iconv, libxml2, libxslt, and zlib for the xsltproc package. 

# The path to the xsltproc executable
#xsltproc.executable=C:\\Programme\\xsltproc\\xsltproc.exe

# JUnit options

# Where to find jUnit
#junit.jar=junit.jar

# The name of the jUnit Testcase
#junit.testcase=${ant.project.name}TestSuite

# Whether to print a summary
#junit.printsummary=on

# Whether to halt if an error occurs
#junit.haltonfailure=off

# Ant Contrib

# Include ant runtime in classpath
# Modern build files: "ignore"
# Compatibility to old build files: "last"
#build.sysclasspath=ignore

# Where to find the ant-contrib jar.
#ant-contrib.jar=ant-contrib-1.0b1.jar

# Where to find the findbugs lib dir.
#findbugs.lib.dir=<findbugs-install-dir>/lib
